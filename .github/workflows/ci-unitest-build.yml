# This is a basic workflow to help you get started with Actions

name: CI UnitTest & Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "oracle"
          java-version: '17'
#      - name: Setup Android SDK
#        uses: android-actions/setup-android@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7
      - name: Clean
        run: ./gradlew clean
      - name: Build with Gradle
        run: ./gradlew :flagship:assembleDebug


#      - name: Unit tests
#        run: bash ./gradlew flagship:testDebugUnitTestCoverage -i --stacktrace
        #####
#      - name: Test FlagshipTestsCache
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsCache -i --stacktrace
#      - name: Test FlagshipTestsConfig
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsConfig -i --stacktrace
#      - name: Test FlagshipTestsEAI.kt
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsEAI -i --stacktrace
#      - name: Test FlagshipTestsFlags
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsFlags -i --stacktrace
      - name: Test FlagshipTestsVisitor
        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsVisitor -i
      - name: Test FlagshipTestsVisitorStrategy
        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsVisitorStrategy -i
      - name: Test FlagshipTestsTrackingManager
        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager -i
      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_continuous
        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_continuous -i

#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_continuous_fail
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_continuous_fail --debug

#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_continuous_intervals
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_continuous_intervals --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_continuous_max_pool
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_continuous_max_pool --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_continuous_panic
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_continuous_panic --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_no_batching_main
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_no_batching_main --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_no_batching_no_consent
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_no_batching_no_consent --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_no_batching_restart
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_no_batching_restart --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_periodic_activate_fail
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_periodic_activate_fail --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_periodic_batch_fail
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_periodic_batch_fail --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_periodic_bucketing
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_periodic_bucketing --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_periodic_consent
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_periodic_consent --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_periodic_hit_fail
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_periodic_hit_fail --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_no_batching_bucketing
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_no_batching_bucketing --debug
#
#      - name: Test FlagshipTestsTrackingManager.test_tracking_manager_periodic_xpc
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsTrackingManager.test_tracking_manager_periodic_xpc --debug

#      - name: Test FlagshipTestsHits
#        run: bash ./gradlew :flagship:testDebugUnitTest --tests com.abtasty.flagship.FlagshipTestsHits --debug

      ############################
      #      - name: Generate report
      #        run: bash ./gradlew flagship:createDebugUnitTestCoverageReport

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          files: flagship/build/reports/coverage/test/debug/index.xml
      - name: Build
        run: bash ./gradlew flagship:clean flagship:assembleRelease
