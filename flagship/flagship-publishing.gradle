//apply plugin: 'maven-publish'
//apply plugin: 'org.jetbrains.dokka-android'
//apply plugin: "com.jfrog.artifactory"
//
////./gradlew clean artifactoryPublish
//artifactoryPublish.skip = true
//
//artifactory {
//    contextUrl = 'https://abtasty.jfrog.io/artifactory/'
//    publish {
//        repository {
//            repoKey = artifactory_artifact_id
//            username = artifactory_user
//            password = artifactory_key
//            maven = true
//        }
//        defaults {
//            publishArtifacts = true
//            publishPom = true
//        }
//    }
//}
//
//task releaseAllVariantsToArtifactory {
//    doLast {
//        exec {
//            workingDir rootProject.projectDir
//            commandLine 'sh', "./gradlew", ":flagship:assembleRelease"
//        }
//        exec {
//            workingDir rootProject.projectDir
//            commandLine 'sh', "./gradlew", ":flagship:artifactoryPublish"
//        }
//        exec {
//            workingDir rootProject.projectDir
//            commandLine 'sh', "./gradlew", "flagship:artifactoryPublish", "-Dvariant=compat"
//        }
//    }
//}
//
//task releaseAllVariantsToMavenLocal {
//    doLast {
//        exec {
//            workingDir rootProject.projectDir
//            commandLine 'sh', "./gradlew", ":flagship:assembleRelease"
//        }
//        exec {
//            workingDir rootProject.projectDir
//            commandLine 'sh', "./gradlew", ":flagship:publishToMavenLocal"
//        }
//        exec {
//            workingDir rootProject.projectDir
//            commandLine 'sh', "./gradlew", ":flagship:publishToMavenLocal", "-Dvariant=compat"
//        }
//    }
//}
//
//project(':flagship') {
//    artifactoryPublish.dependsOn('assembleRelease')
//    publishing {
//        publications {
//            aar(MavenPublication) {
//                groupId = artifactory_group_id
//                artifactId = artifactory_artifact_id
//                version = flagship_version_name
//                artifact "$buildDir/outputs/aar/" + artifactory_artifact_id + "-" + flagship_version_name + ".aar"
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    configurations.implementation.allDependencies.each { dependency ->
//                        if (dependency.name != "unspecified") {
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', dependency.group)
//                            dependencyNode.appendNode('artifactId', dependency.name)
//                            dependencyNode.appendNode('version', dependency.version)
//                        }
//                    }
//                    if (artifactory_variant == 'compat') {
//                        configurations.compatImplementation.allDependencies.each { dependency ->
//                            if (dependency.name != "unspecified") {
//                                def dependencyNode = dependenciesNode.appendNode('dependency')
//                                dependencyNode.appendNode('groupId', dependency.group)
//                                dependencyNode.appendNode('artifactId', dependency.name)
//                                dependencyNode.appendNode('version', dependency.version)
//                            }
//                        }
//                    } else {
//                        configurations.commonImplementation.allDependencies.each { dependency ->
//                            if (dependency.name != "unspecified") {
//                                def dependencyNode = dependenciesNode.appendNode('dependency')
//                                dependencyNode.appendNode('groupId', dependency.group)
//                                dependencyNode.appendNode('artifactId', dependency.name)
//                                dependencyNode.appendNode('version', dependency.version)
//                            }
//                        }
//                    }
//                }
//            }
//        }
//    }
//
//    artifactoryPublish {
//        publications(publishing.publications.aar)
//    }
//}

//////////////////////////////////////// Github
//apply plugin: 'maven-publish'
//
//project(':flagship') {
//    publishing {
//        publications {
//            maven(MavenPublication) {
//                groupId = artifactory_group_id
//                artifactId = artifactory_artifact_id
//                version = flagship_version_name
//                artifact "$buildDir/outputs/aar/" + artifactory_artifact_id + "-" + flagship_version_name + ".aar"
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    configurations.implementation.allDependencies.each { dependency ->
//                        if (dependency.name != "unspecified") {
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', dependency.group)
//                            dependencyNode.appendNode('artifactId', dependency.name)
//                            dependencyNode.appendNode('version', dependency.version)
//                        }
//                    }
//                    if (artifactory_variant == 'compat') {
//                        configurations.compatImplementation.allDependencies.each { dependency ->
//                            if (dependency.name != "unspecified") {
//                                def dependencyNode = dependenciesNode.appendNode('dependency')
//                                dependencyNode.appendNode('groupId', dependency.group)
//                                dependencyNode.appendNode('artifactId', dependency.name)
//                                dependencyNode.appendNode('version', dependency.version)
//                            }
//                        }
//                    } else {
//                        configurations.commonImplementation.allDependencies.each { dependency ->
//                            if (dependency.name != "unspecified") {
//                                def dependencyNode = dependenciesNode.appendNode('dependency')
//                                dependencyNode.appendNode('groupId', dependency.group)
//                                dependencyNode.appendNode('artifactId', dependency.name)
//                                dependencyNode.appendNode('version', dependency.version)
//                            }
//                        }
//                    }
//                }
//            }
//        }
//
//        repositories {
//            maven {
//                def propsFile = rootProject.file('github.properties')
//                def props = new Properties()
//                props.load(new FileInputStream(propsFile))
//
//                name = "GitHubPackages"
//                url = uri("https://maven.pkg.github.com/flagship-io/flagship-android")
//                credentials {
//                    username = props['user']
//                    password = props['token']
//                }
//            }
//        }
//    }
//}

apply plugin: 'signing'
apply plugin: 'maven-publish'

project(':flagship') {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = artifactory_group_id
                artifactId = artifactory_artifact_id
                version = flagship_version_name
                artifact "$buildDir/outputs/aar/" + artifactory_artifact_id + "-" + flagship_version_name + ".aar"
                pom {
                    name = artifactory_artifact_id
                    description = 'PUBLISH_DESCRIPTION'
                    url = 'https://github.com/flagship-io/flagship-android'
                    licenses {
                        license {
                            name = 'Apache License'
                            url = 'https://github.com/flagship-io/flagship-android/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'raf-abtasty'
                            name = 'Raphael'
                            email = 'raphael@abtasty.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/flagship-io/flagship-android.git'
                        developerConnection = 'scm:git:ssh:github.com/flagship-io/flagship-android.git'
                        url = 'https://github.com/flagship-io/flagship-android/blob/master/'
                    }
                }
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each { dependency ->
                        if (dependency.name != "unspecified") {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', dependency.group)
                            dependencyNode.appendNode('artifactId', dependency.name)
                            dependencyNode.appendNode('version', dependency.version)
                        }
                    }
                    if (artifactory_variant == 'compat') {
                        configurations.compatImplementation.allDependencies.each { dependency ->
                            if (dependency.name != "unspecified") {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', dependency.group)
                                dependencyNode.appendNode('artifactId', dependency.name)
                                dependencyNode.appendNode('version', dependency.version)
                            }
                        }
                    } else {
                        configurations.commonImplementation.allDependencies.each { dependency ->
                            if (dependency.name != "unspecified") {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', dependency.group)
                                dependencyNode.appendNode('artifactId', dependency.name)
                                dependencyNode.appendNode('version', dependency.version)
                            }
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def propsFile = rootProject.file('keystore.properties')
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                name = "OSSRH"
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username = props['ossrhUsername']
                    password = props['ossrhPassword']
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}